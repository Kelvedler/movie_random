openapi: 3.0.1
info:
  title: Movie Random
  description: Swagger documented API
  contact:
    email: hnflkmvjcm@gmail.com
  version: 1.0.0
servers:
- url: https://movie-random.herokuapp.com
tags:
- name: Account
  description: Authentication endpoints
- name: Movies
  description: Movie CRUD
paths:
  /accounts/register/:
    post:
      tags:
      - Account
      summary: Register new account
      requestBody:
        description: Account object with unique username and email
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                email:
                  type: string
                password:
                  type: string
        required: true
      responses:
        201:
          description: created
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
                  email:
                    type: string
                  token:
                    type: string
  /accounts/login/:
    post:
      tags:
      - Account
      summary: Login to account
      requestBody:
        description: Credentials
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
        required: true
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
  /accounts/password_change/:
    post:
      tags:
      - Account
      summary: Change password of the account
      requestBody:
        description: valid and new password
        content:
          application/json:
            schema:
              type: object
              properties:
                old_password:
                  type: string
                new_password:
                  type: string
        required: true
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
      security:
      - token_authorization:
  /accounts/logout/:
    get:
      tags:
      - Account
      summary: Logout from account
      responses:
        200:
          description: Successful operation
      security:
      - token_authorization:
  /movies/:
    get:
      tags:
      - Movies
      summary: Returns list of movies
      parameters:
      - name: page
        in: query
        description: Page of a list
        schema:
          type: integer
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    format: int32
                  next:
                    type: string
                  previous:
                    type: string
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/MovieResponse'
    post:
      tags:
      - Movies
      summary: Create new movie object
      requestBody:
        description: Movie object with title, year unique set. Genres, photos, directors, writers and stars are optional
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Movie'
        required: true
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MovieResponse'
  /movies/{id}/:
    get:
      tags:
      - Movies
      summary: Find movie by ID
      description: Returns a single movie
      parameters:
      - name: id
        in: path
        description: ID of movie to return
        required: true
        schema:
          type: integer
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MovieResponse'
    put:
      tags:
      - Movies
      summary: Update existing movie
      parameters:
        - name: id
          in: path
          description: ID of movie to return
          required: true
          schema:
            type: integer
      requestBody:
        description: Movie object that needs to be updated
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Movie'
        required: true
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MovieResponse'
    delete:
      tags:
      - Movies
      summary: Delete movie
      parameters:
        - name: id
          in: path
          description: ID of movie to delete
          required: true
          schema:
            type: integer
      responses:
        204:
          description: Successful operation
  /movies/reviews/:
    post:
      tags:
      - Movies
      summary: Create a movie review
      requestBody:
        description: Review object. Limited to one review per movie for an account
        content:
          application/json:
            schema:
              type: object
              properties:
                movie_id:
                  type: integer
                title:
                  type: string
                review:
                  type: string
        required: true
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReviewResponse'
      security:
        - token_authorization:
  /movies/reviews/{id}/:
    put:
      tags:
      - Movies
      summary: Update existing review
      parameters:
        - name: id
          in: path
          description: ID of review to return
          required: true
          schema:
            type: integer
      requestBody:
        description: Review object. Only update account's own reviews, can't change movie.
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                review:
                  type: string
        required: true
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReviewResponse'
      security:
        - token_authorization:
    delete:
      tags:
      - Movies
      summary: Delete review
      parameters:
        - name: id
          in: path
          description: ID of review to delete. Can be performed by admin or related account.
          required: true
          schema:
            type: integer
      responses:
        204:
          description: Successful operation
      security:
        - token_authorization:
  /movies/reviews/movie/{id}/:
    get:
      tags:
      - Movies
      summary: Returns list of reviews related to particular movie
      parameters:
        - name: page
          in: query
          description: Page of a list
          schema:
            type: integer
        - name: id
          in: path
          description: ID of related movie
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    format: int32
                  next:
                    type: string
                  previous:
                    type: string
                  results:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        title:
                          type: string
                        review:
                          type: string
                        account_id:
                          type: integer
  /movies/reviews/account/{id}/:
    get:
      tags:
      - Movies
      summary: Returns list of reviews related to particular account
      parameters:
        - name: page
          in: query
          description: Page of a list
          schema:
            type: integer
        - name: id
          in: path
          description: ID of related account
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    format: int32
                  next:
                    type: string
                  previous:
                    type: string
                  results:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        movie_id:
                          type: integer
                        title:
                          type: string
                        review:
                          type: string
  /movies/personas/:
    get:
      tags:
      - Movies
      summary: Returns list of movie industry personas
      parameters:
        - name: page
          in: query
          description: Page of a list
          schema:
            type: integer
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    format: int32
                  next:
                    type: string
                  previous:
                    type: string
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/PersonaResponse'
    post:
      tags:
      - Movies
      summary: Create new persona object
      requestBody:
        description: Persona object with first_name, last_name, birthdate unique set. Biography is optional.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PersonaDetailed'
        required: true
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonaDetailedResponse'
  /movies/personas/{id}/:
    get:
      tags:
      - Movies
      summary: Find persona by ID
      parameters:
        - name: id
          in: path
          description: ID of persona to return
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonaRelatedResponse'
    put:
      tags:
      - Movies
      summary: Update existing persona
      parameters:
        - name: id
          in: path
          description: ID of persona to return
          required: true
          schema:
            type: integer
      requestBody:
        description: Persona object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PersonaDetailed'
        required: true
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonaRelatedResponse'
    delete:
      tags:
      - Movies
      summary: Delete persona
      parameters:
        - name: id
          in: path
          description: ID of persona to delete
          required: true
          schema:
            type: integer
      responses:
        204:
          description: Successful operation
  /movies/genres/:
    get:
      tags:
      - Movies
      summary: Returns list of genres
      parameters:
        - name: page
          in: query
          description: Page of a list
          schema:
            type: integer
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    format: int32
                  next:
                    type: string
                  previous:
                    type: string
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/GenreResponse'
    post:
      tags:
      - Movies
      summary: Create new genre object
      requestBody:
        description: Genre object
        content:
          application/json:
            schema:
                $ref: '#/components/schemas/Genre'
        required: true
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenreResponse'
  /movies/genres/{id}/:
    get:
      tags:
      - Movies
      summary: Find genre by ID
      parameters:
        - name: id
          in: path
          description: ID of genre to return
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenreDetailResponse'
    put:
      tags:
      - Movies
      summary: Update existing genre
      parameters:
        - name: id
          in: path
          description: ID of genre to return
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenreDetailResponse'
    delete:
      tags:
      - Movies
      summary: Delete genre
      parameters:
        - name: id
          in: path
          description: ID of genre to delete
          required: true
          schema:
            type: integer
      responses:
        204:
          description: Successful operation
components:
  schemas:
    Persona:
      type: object
      properties:
        first_name:
          type: string
        last_name:
          type: string
        birthdate:
          type: string
          format: date
    PersonaResponse:
      type: object
      properties:
        id:
          type: integer
        first_name:
          type: string
        last_name:
          type: string
        birthdate:
          type: string
          format: date
    PersonaDetailed:
      type: object
      properties:
        first_name:
          type: string
        last_name:
          type: string
        birthdate:
          type: string
          format: date
        biography:
          type: string
    PersonaDetailedResponse:
      type: object
      properties:
        id:
          type: string
        first_name:
          type: string
        last_name:
          type: string
        birthdate:
          type: string
          format: date
        biography:
          type: string
    PersonaRelatedResponse:
      type: object
      properties:
        id:
          type: integer
        first_name:
          type: string
        last_name:
          type: string
        birthdate:
          type: string
          format: date
        biography:
          type: string
        directors:
          type: array
          items:
            $ref: '#/components/schemas/MovieLightResponse'
        writers:
          type: array
          items:
            $ref: '#/components/schemas/MovieLightResponse'
        stars:
          type: array
          items:
            $ref: '#/components/schemas/MovieLightResponse'
    ReviewResponse:
      type: object
      properties:
        id:
          type: integer
        movie_id:
          type: integer
        title:
          type: string
        review:
          type: string
        account_id:
          type: string
    Genre:
      type: object
      properties:
        name:
          type: string
    GenreResponse:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
    GenreDetailResponse:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        movies:
          type: array
          items:
            $ref: '#/components/schemas/MovieLightResponse'
    Movie:
      type: object
      properties:
        title:
          type: string
        year:
          type: integer
        length:
          type: integer
        rating:
          type: number
          maximum: 9.9
        trailer:
          type: string
        description:
          type: string
        genres:
          type: array
          items:
            type: string
        photos:
          type: array
          items:
            type: string
        directors:
          type: array
          items:
            $ref: '#/components/schemas/Persona'
        writers:
          type: array
          items:
            $ref: '#/components/schemas/Persona'
        stars:
          type: array
          items:
            $ref: '#/components/schemas/Persona'
    MovieResponse:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        year:
          type: integer
        length:
          type: integer
        rating:
          type: number
          maximum: 9.9
        trailer:
          type: string
        description:
          type: string
        genres:
          type: array
          items:
            $ref: '#/components/schemas/GenreResponse'
        photos:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
              photo:
                type: string
        directors:
          type: array
          items:
            $ref: '#/components/schemas/PersonaResponse'
        writers:
          type: array
          items:
            $ref: '#/components/schemas/PersonaResponse'
        stars:
          type: array
          items:
            $ref: '#/components/schemas/PersonaResponse'
    MovieLightResponse:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        year:
          type: string
          format: date
  securitySchemes:
    token_authorization:
      type: apiKey
      name: Authorization
      in: header
      description: Add "Token " prefix to the token value
